<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Sonata for solo Violin</title>
    <link>https://violinSonata.site/post/</link>
    <description>Recent content in Posts on Sonata for solo Violin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 04 Sep 2020 15:05:10 +0800</lastBuildDate>
    
	<atom:link href="https://violinSonata.site/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang使用gRPC指南</title>
      <link>https://violinSonata.site/2020/use-grpc-in-golang/</link>
      <pubDate>Fri, 04 Sep 2020 15:05:10 +0800</pubDate>
      
      <guid>https://violinSonata.site/2020/use-grpc-in-golang/</guid>
      <description>本文以一个简单的CURD服务为例演示了如果一步步使用grpc的接口. 使用protobuf 编写proto文件 proto文件是定义整个proto</description>
    </item>
    
    <item>
      <title>Golang使用私有仓库</title>
      <link>https://violinSonata.site/2020/use-private-repo-in-golang/</link>
      <pubDate>Mon, 31 Aug 2020 14:51:20 +0800</pubDate>
      
      <guid>https://violinSonata.site/2020/use-private-repo-in-golang/</guid>
      <description>本文基于go 1.13即以上进行演示。 将go代码推送到私有仓库之后， 如果想要在其他项目引用， 需要做以下设置。 设置go env # 设置代理， 多个用逗号分</description>
    </item>
    
    <item>
      <title>Basic Concept of Rabbitmq</title>
      <link>https://violinSonata.site/2020/basic-concept-of-rabbitmq/</link>
      <pubDate>Mon, 24 Aug 2020 15:25:07 +0800</pubDate>
      
      <guid>https://violinSonata.site/2020/basic-concept-of-rabbitmq/</guid>
      <description>Message 消息 消息，消息是不具名的，它由消息头和消息体组成。消息体是不透明的，而消息头则由一系列的可选属性组成，这些属性包括routing-key（</description>
    </item>
    
    <item>
      <title>SSL/TLS的工作原理</title>
      <link>https://violinSonata.site/2020/detail-of-ssl-and-tls/</link>
      <pubDate>Thu, 13 Aug 2020 15:26:47 +0800</pubDate>
      
      <guid>https://violinSonata.site/2020/detail-of-ssl-and-tls/</guid>
      <description>网络通信过程中可能遇到的风险与应对 网络通信过程中的数据安全将要面临三个风险: 1. 窃听风险(eavesdropping) 2. 篡改风险(tamper</description>
    </item>
    
    <item>
      <title>使用Golang创建守护进程</title>
      <link>https://violinSonata.site/2020/create-daemon-process-in-golang/</link>
      <pubDate>Thu, 13 Aug 2020 15:07:00 +0800</pubDate>
      
      <guid>https://violinSonata.site/2020/create-daemon-process-in-golang/</guid>
      <description>package main import ( &amp;quot;os&amp;quot; &amp;quot;fmt&amp;quot; &amp;quot;os/signal&amp;quot; &amp;quot;syscall&amp;quot; &amp;quot;time&amp;quot; &amp;quot;log&amp;quot; &amp;quot;os/exec&amp;quot; ) func init() { // 如果本进程的父进程不是init进程, 则 // 创建与本进程相同的子进程, 然后退出, 使 // 子进程被init进程接管, 从</description>
    </item>
    
    <item>
      <title>网络安全基本概念</title>
      <link>https://violinSonata.site/2020/basic-concepts-of-network-security/</link>
      <pubDate>Wed, 12 Aug 2020 16:30:09 +0800</pubDate>
      
      <guid>https://violinSonata.site/2020/basic-concepts-of-network-security/</guid>
      <description>对称加密 对称加密很简单， 就是消息传递的双方共享同一个密码。 消息发送人用密码对消息进行加密， 然后将密文发给给消息接收人， 消息接受人使用此密码对</description>
    </item>
    
    <item>
      <title>Docker容器中访问宿主机网络</title>
      <link>https://violinSonata.site/2020/access-host-network-in-docker/</link>
      <pubDate>Wed, 08 Apr 2020 14:41:12 +0800</pubDate>
      
      <guid>https://violinSonata.site/2020/access-host-network-in-docker/</guid>
      <description>Docker容器监听宿主机端口 使用端口映射 现在假设有一个Docker容器nginx， 它运行时将监听docker内的80端口， 此时宿主机的80</description>
    </item>
    
    <item>
      <title>MySQL常用操作</title>
      <link>https://violinSonata.site/2020/useful-operates-in-mysql/</link>
      <pubDate>Wed, 19 Feb 2020 15:14:38 +0800</pubDate>
      
      <guid>https://violinSonata.site/2020/useful-operates-in-mysql/</guid>
      <description>数据库概念关系 服务器 -&amp;gt; 实例 -&amp;gt; 数据库 -&amp;gt; 表 -&amp;gt; 记录 登录数据库实例 mysql \ -u{用户名} \ #如果不指定-u， 则使用 root 用户。 -p{密码} \ #如果指定-p而</description>
    </item>
    
    <item>
      <title>Kubernetes中的容器配置管理：ConfigMap</title>
      <link>https://violinSonata.site/2019/configmap/</link>
      <pubDate>Mon, 16 Sep 2019 10:51:55 +0800</pubDate>
      
      <guid>https://violinSonata.site/2019/configmap/</guid>
      <description>什么是ConfigMap ConfigMap ，即配置字典， 是Kubernetes提供的用于管理容器中程序运行所需配置的解决方案。 它是一种持久化的机制， 不会随着</description>
    </item>
    
    <item>
      <title>管理Kubernetes中的对象</title>
      <link>https://violinSonata.site/2019/lables/</link>
      <pubDate>Sat, 14 Sep 2019 10:51:55 +0800</pubDate>
      
      <guid>https://violinSonata.site/2019/lables/</guid>
      <description>Namespace Kubernetes 使用命名空间来进行隔离， 每个对象只能属于其中一个命名空间， 不通的命名空间之间相互隔离。 值得一提的是， 命名空间也会影响到Service的行</description>
    </item>
    
    <item>
      <title>Flume: 日志收集、聚合、归档工具</title>
      <link>https://violinSonata.site/2019/flume/</link>
      <pubDate>Sun, 24 Mar 2019 16:24:47 +0800</pubDate>
      
      <guid>https://violinSonata.site/2019/flume/</guid>
      <description>在大数据时代， 计算机技术已经不是阻碍各大互联网公司发展的壁垒——在开源浪潮下， 所有的技术都是共享的。 甚至初创公司的技术栈会比大公司的更新更先</description>
    </item>
    
    <item>
      <title>&lt;译&gt;并发模型</title>
      <link>https://violinSonata.site/2019/concurrency-model/</link>
      <pubDate>Sat, 02 Mar 2019 19:23:36 +0800</pubDate>
      
      <guid>https://violinSonata.site/2019/concurrency-model/</guid>
      <description>本文翻译自 http://tutorials.jenkov.com/java-concurrency/index.html 并发系统可以使用不同的并发模型来实现。并发模型阐述了系统中的多个线程怎样合作来完成给定的任务。不同的并发模型把任务按照不同的方式</description>
    </item>
    
    <item>
      <title>通过channel模拟信号</title>
      <link>https://violinSonata.site/2019/broadcast-signals-using-channel/</link>
      <pubDate>Tue, 29 Jan 2019 12:52:36 +0800</pubDate>
      
      <guid>https://violinSonata.site/2019/broadcast-signals-using-channel/</guid>
      <description>众所周知，在Golang中创建多个goroutine后，可以使用sync.WaitGroup来等待多个协程全部完成。 那么是否有一种方法，不使</description>
    </item>
    
    <item>
      <title>Even主题的小吐槽</title>
      <link>https://violinSonata.site/2019/disadvance-on-even/</link>
      <pubDate>Mon, 28 Jan 2019 13:40:16 +0800</pubDate>
      
      <guid>https://violinSonata.site/2019/disadvance-on-even/</guid>
      <description>&lt;p&gt;搭建博客时横向对比了几个喜欢的Hexo主题，最终选定了&lt;a href=&#34;https://github.com/ahonn/hexo-theme-even&#34;&gt;Even&lt;/a&gt; 。&lt;br /&gt;
不过依然对&lt;code&gt;Even&lt;/code&gt;有几个不太满意的地方，在这里记录下来，日后有时间就自己修改一下。&lt;/p&gt;

&lt;h2 id=&#34;主题颜色不好看&#34;&gt;主题颜色不好看。&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Even&lt;/code&gt;默认自带的几个主题颜色都不太好看，好在作者在Wiki中介绍了自定义颜色的方法，想要修改不难。&lt;/p&gt;

&lt;h2 id=&#34;没有分享链接按钮&#34;&gt;没有分享链接按钮&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Even&lt;/code&gt;没有设置&lt;code&gt;分享到&lt;/code&gt;这类的按钮，这有点不太方便。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python虚拟环境指南</title>
      <link>https://violinSonata.site/2019/virtualenvwrapper/</link>
      <pubDate>Sun, 27 Jan 2019 23:39:34 +0800</pubDate>
      
      <guid>https://violinSonata.site/2019/virtualenvwrapper/</guid>
      <description>&lt;h2 id=&#34;安装-virtualenv&#34;&gt;安装&lt;code&gt;virtualenv&lt;/code&gt;:&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$pip install virtualenv
$virtualenv --version
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;安装-virtualenvwrapper&#34;&gt;安装 &lt;code&gt;virtualenvwrapper&lt;/code&gt;:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;如果想要使用 virtualenvwrapper的话， 不必事先手动安装 virtualenv,  pip会自动解决该依赖。&lt;/li&gt;
&lt;li&gt;在windows环境下,应该安装其对应的windows版本 : &lt;code&gt;virtualenvwrapper-win&lt;/code&gt;。该版本仅能在 cmd 下工作， 如果在windows上使用
模拟Linux命令行的工具， 如 git bash , cmder 等， 则可能会造成无法正常工作。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://violinSonata.site/2019/hello-world/</link>
      <pubDate>Sun, 27 Jan 2019 19:23:36 +0800</pubDate>
      
      <guid>https://violinSonata.site/2019/hello-world/</guid>
      <description>&lt;p&gt;Welcome to &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&#34;https://hexo.io/docs/&#34;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&#34;https://hexo.io/docs/troubleshooting.html&#34;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&#34;https://github.com/hexojs/hexo/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;quick-start&#34;&gt;Quick Start&lt;/h1&gt;

&lt;h2 id=&#34;start&#34;&gt;start&lt;/h2&gt;

&lt;h3 id=&#34;create-a-new-post&#34;&gt;Create a new post&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hexo new &amp;quot;My New Post&amp;quot;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>