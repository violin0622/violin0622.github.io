<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Sonata for solo Violin</title>
    <link>https://violinsonata.site/categories/golang/</link>
    <description>Recent content in Golang on Sonata for solo Violin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 31 Aug 2020 14:51:20 +0800</lastBuildDate>
    
	<atom:link href="https://violinsonata.site/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang使用私有仓库</title>
      <link>https://violinsonata.site/2020/use-private-repo-in-golang/</link>
      <pubDate>Mon, 31 Aug 2020 14:51:20 +0800</pubDate>
      
      <guid>https://violinsonata.site/2020/use-private-repo-in-golang/</guid>
      <description>本文基于go 1.13即以上进行演示。 将go代码推送到私有仓库之后， 如果想要在其他项目引用， 需要做以下设置。 设置go env # 设置代理， 多个用逗号分</description>
    </item>
    
    <item>
      <title>通过channel模拟信号</title>
      <link>https://violinsonata.site/2019/broadcast-signals-using-channel/</link>
      <pubDate>Tue, 29 Jan 2019 12:52:36 +0800</pubDate>
      
      <guid>https://violinsonata.site/2019/broadcast-signals-using-channel/</guid>
      <description>众所周知，在Golang中创建多个goroutine后，可以使用sync.WaitGroup来等待多个协程全部完成。 那么是否有一种方法，不使</description>
    </item>
    
  </channel>
</rss>